В калькуляторе доступны стандартные функции от двух переменных ( + - * / div mod)
Все эти операции реализованы через обратную польскую запись
Также возведение в степень реализовано через бинарное возведение, которое работает быстрее обычного, производя меньше операций (асимптотика O(log2(n)), вместо O(n))
Кроме этого присутсвуют дополнительные функции:
1) произведение матриц;
2) long sum (сумма двух чисел превышающих числовые пределы);
3) разложение числа на простые делители;
4) нахождение корней квадратного уравнения и их количества;
Также в файле calculator.cpp есть функции, которые не используются, но хочется их подключить к работе, так как по моему мнению они весьма полезны, среди таких там есть:
нахождения точной cуммы для большого количества чисел типа double  ( эта суммы точнее наивной, такой как a + b), 
функция является довольно полезной с учётом общеизвестного существования неточности в сумме чисел типа double в связи с их устройством
к сожалению из-за особенности ввода она не используется, её можно было вынести как отдельную функцию, также как и long sum, но я посчитал это напрасным, из-за неудобства придуманного мною типа ввода

Из того, что хочется доделать:
1) разобраться с проблемами связанными с обратной польской записью, из-за которой теряется -
а также возникают проблемы при написании двух знаков подряд (нужно при операции с отрицательным числом), из-за чего функциональность модуля от числа теряется
ожидается, что придётся вносить изменения в функцию Tokenize, для корректной работы с - и отрицательными числами
при этом с проблемой начала выражения с отрицательного числа я разобрался
2) расширить функциональность уже имеющихся функций
к примеру осуществелние длинной суммы сразу для группы чисел, а не для двух;
произведение сразу нескольких матриц;
также из функции нахождения простых делителей числа можно реализовать функции находения НОДа и НОКа чисел;
3) расширить функциональность с помощью добавления новых операций и функций,
(для этого очень хочется составить список нужных операций и функций, составление которого может занять больше времени, чем реализация операций из него);
4) а также очень хочется перейти от консольного интерфейса к графическому для большей наглядности и интуитивности работы программы
